package com.Oath2.Oath2.Demo.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.method.configuration.EnableMethodSecurity;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.crypto.factory.PasswordEncoderFactories;
import org.springframework.security.crypto.password.PasswordEncoder;
import org.springframework.security.web.SecurityFilterChain;

@Configuration
@EnableWebSecurity
@EnableMethodSecurity
public class SecurityConfig {
  
  @Bean
  SecurityFilterChain securityFilterChain(HttpSecurity http) throws Exception {
    
    http
    .csrf()
    .disable()
    .authorizeHttpRequests()
    .anyRequest()
    .authenticated()
    .and()
    .oauth2Login()
    ;   
    return http.build();
  }
  
  @Bean
  protected void configure1(AuthenticationManagerBuilder auth) throws Exception {
    PasswordEncoder passwordEncoder = PasswordEncoderFactories.createDelegatingPasswordEncoder();
    auth.inMemoryAuthentication()
    .withUser("user1")
    .password(passwordEncoder
    .encode("password"))
    .roles("ADMIN");
    
    auth.inMemoryAuthentication()
    .withUser("user2")
    .password(passwordEncoder
    .encode("password"))
    .roles("USER");
  }
}
